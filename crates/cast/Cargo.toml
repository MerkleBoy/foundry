[package]
name = "cast"
description = "Command-line tool for performing Ethereum RPC calls"

version.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true

[lints]
workspace = true

[lib]
name = "cast"
crate-type = ["rlib", "cdylib"]

[[bin]]
name = "cast"
path = "bin/main.rs"
required-features = ["cli"]

[dependencies]
# lib
foundry-block-explorers = { workspace = true, optional = true }
foundry-common.workspace = true
foundry-compilers = { workspace = true, optional = true }
foundry-config.workspace = true
foundry-evm-core = { workspace = true, optional = true }
foundry-evm = { workspace = true, optional = true }
foundry-wallets = { workspace = true, optional = true }

alloy-chains.workspace = true
alloy-consensus = { workspace = true, features = ["serde", "kzg"] }
alloy-contract.workspace = true
alloy-dyn-abi.workspace = true
alloy-json-abi.workspace = true
alloy-json-rpc.workspace = true
alloy-network.workspace = true
alloy-primitives.workspace = true
alloy-rlp.workspace = true
alloy-rpc-types = { workspace = true, features = ["eth", "trace"] }
alloy-serde.workspace = true
alloy-signer-local = { workspace = true, features = ["mnemonic", "keystore"] }
alloy-signer.workspace = true
alloy-sol-types.workspace = true
alloy-transport.workspace = true
alloy-ens = { workspace = true, features = ["provider"] }
alloy-eips.workspace = true

op-alloy-flz.workspace = true
op-alloy-consensus = { workspace = true, features = ["alloy-compat"] }

chrono.workspace = true
eyre.workspace = true
futures.workspace = true
revm = { workspace = true, features = ["optional_balance_check"] }
rand.workspace = true
rand_08.workspace = true
rayon = { workspace = true, optional = true }
serde_json.workspace = true
serde.workspace = true

# bin
foundry-cli = { workspace = true, optional = true }

clap = { version = "4", features = ["derive", "env", "unicode", "wrap_help"] }
clap_complete.workspace = true
clap_complete_fig = "4"
comfy-table.workspace = true
dunce.workspace = true
itertools.workspace = true
regex = { workspace = true, default-features = false }
rpassword = { version = "7", optional = true }
semver.workspace = true
tempfile = { workspace = true, optional = true }
tracing.workspace = true
yansi.workspace = true
evmole.workspace = true

[dev-dependencies]
anvil.workspace = true
foundry-test-utils.workspace = true
alloy-hardforks.workspace = true

[features]
default = ["jemalloc", "cli", "parallel", "password-prompt", "explorer", "wallets", "evm"]
asm-keccak = ["alloy-primitives/asm-keccak"]
jemalloc = ["foundry-cli/jemalloc"]
mimalloc = ["foundry-cli/mimalloc"]
tracy-allocator = ["foundry-cli/tracy-allocator"]
aws-kms = ["foundry-wallets/aws-kms"]
gcp-kms = ["foundry-wallets/gcp-kms"]
isolate-by-default = ["foundry-config/isolate-by-default"]
cli = ["dep:foundry-cli"]
parallel = ["dep:rayon"]
password-prompt = ["dep:rpassword"]
wallets = ["dep:foundry-wallets"]
evm = ["dep:foundry-evm", "dep:foundry-evm-core"]
explorer = ["dep:foundry-block-explorers", "dep:foundry-compilers", "dep:tempfile"]

# Target-specific dependency feature overrides
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
alloy-provider = { workspace = true, features = [
    "reqwest",
    "ws",
    "ipc",
    "trace-api",
    "txpool-api",
] }
tokio = { workspace = true, features = ["macros", "signal"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
alloy-provider = { workspace = true, features = [] }
tokio = { workspace = true, features = ["macros"] }

getrandom = { version = "0.3.3", features = ["wasm_js"]}
